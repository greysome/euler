(defun truncatablep (n)
  (unless (primep n)
    (return-from truncatablep nil))
  (let ((num-digits (num-digits n))
	(digits (digits n)))
    (dorange (i 1 num-digits)
      (unless (and
	       (primep (from-digits (subseq digits i)))
	       (primep (from-digits (subseq digits 0 (- num-digits i)))))
	(return-from truncatablep nil)))
    t))

(do ((i 11 (1+ i))
     (num-truncatable 0)
     (sum 0))
    ((>= num-truncatable 11) sum)
  (when (truncatablep i)
    (format t "~d~%" i)
    (incf num-truncatable)
    (incf sum i)))